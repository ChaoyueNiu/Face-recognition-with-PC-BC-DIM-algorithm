function F = f_crop_face_region_2points1(im, source, dest,inSize)
%% This program to crope image afer transformation, and the size of cropped
%% to output the image with size: 150*130
% first make the transformation structure from the labelled points to the
% landmarks (two eyes)
%%
inputpt=[source(1:2);source(3:4)];
%basept=[dest(1:2); dest(3:4)];
basept=[dest(1:2); dest(3:4)];
trans = cp2tform(inputpt, basept, 'linear conformal');  %??????????????????????????????????inputpt??????m*2????????????????????????????????????????basept??????m*2????????????????(??????)????????????????????


normImages = imtransform(im, trans, 'bicubic', 'xdata',[1,inSize(1)], 'ydata',[1, inSize(2)]);      %????????????????????????????????????????????????????????????????????????????????????????????????????
%normImages = imtransform(im, trans, 'bicubic');
F = normImages;

%  ---- crop the image ---*  %??????????????????????????????????????????????????????????????????????????????????????
%  Here, the image cropped with the size: 142*130
%deye = 70;
% % % inLE=source(1:2);
% % % inRE=source(3:4);
% % % 
% % % outLE=dest(1:2);
% % % outRE=dest(3:4);
% % % 
% % % d_eye = ((outLE(1) - outRE(1))^2 + (outLE(2) - outRE(2))^2)^(1/2);
% % % midX = (outLE(1) + outRE(1))/2 ;
% % % midY = (outLE(2) + outRE(2))/2 ;
% % % 
% % % % calculate the upper bound of the warpping box, the defaut up boundary is
% % % % about 1+ lenght of eye from the middle postion of eye
% % % if round(- 0.5*d_eye + midY-1) < 1  %??????????????????????????????????????????????????????????1/3????????1/2??
% % %     limit_up = 1;                   %??????if????????????????????????????????outLE????????????????????????????????
% % % else
% % %     limit_up = round(- 0.5*d_eye + midY-1); 
% % % end
% % % %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% % % % buttom boundary
% % % if round(1.5*d_eye + midY) < inSize(2)
% % %     limit_down = round(1.5*d_eye + midY);
% % % else
% % %     limit_down = inSize(2);
% % % end
% % % 
% % % %%%%%%%%%%%%%%%%%%% left boundary
% % % if round(-d_eye + midX) < 1
% % %     limit_left = 1;
% % % else
% % %     limit_left = round(-d_eye + midX);
% % % end 
% % % 
% % % %%%%%%%%%%%%%%%%%%% right boundary
% % % if round(d_eye + midX) < inSize(1)
% % %     limit_right = round(d_eye + midX);
% % % else
% % %     limit_right = inSize(1);
% % % end
 
% 
% F = im(limit_up:limit_down, limit_left:limit_right); %del by sfy
% imshow(F,[]);
%

% % % croppedimages = normImages(limit_up:limit_down, limit_left:limit_right);

% % % F = croppedimages;  %add by sfy

% if nshow
%     % locate the coordinates after tranfromation
%     oo = tformfwd(trans, [inLE; inRE]);
%     alex=oo(1,1);aley=oo(1,2);
%     arex=oo(2,1);arey=oo(2,2);
% 
%     subplot(1,3,1);
%     imshow(im,[]);hold on;
%     plot(source(1:2:4),source(2:2:4),'y+','linewidth',2);
%     
%     subplot(1,3,2);
%     imshow(normImages,[]);
%     hold on;
%     plot([outLE(1), outRE(1)], [outLE(2), outRE(2)], 'r.');
%     
%     %transform input points
%     oo = tformfwd(trans, [inLE; inRE]);
%     plot(oo(:,1), oo(:,2), 'b*');hold on;
%     plot([limit_left,limit_right,limit_right,limit_left,limit_left],[limit_up limit_up limit_down limit_down limit_up],'y-','linewidth',2);
% 
%     subplot(1,3,3);
%     imshow(croppedimages,[]);hold on;
%     pause();
% end

